---
# tasks file for create-igw
- name: Shell to fetch the vpc_id 
  shell: |
         echo "select vpc_id from vpc_net where owner='{{ vpc_owner }}' and name='{{ name_vpc }}'" > get.sql
         mysql -u {{ dbuser }} -p{{ dbpass }} {{ database }} -s -N <./get.sql  2>/dev/null
  register: output


- set_fact:
    vpc_id: "{{ output.stdout }}"

    #- debug:
    #    msg: "{{ vpc_id }}"


- name: shell module to table vpc_igw already configured. 
  shell: |
         mysql -u {{ dbuser }} -p{{ dbpass }} {{ database }} -s -N -e "select count(*) from vpc_igw where vpc_id='{{ vpc_id }}'"; 
  register: igw_verify
  
- debug:
    msg: "{{ igw_verify }}"


- ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    state: present
    region: "{{ aws_region }}"
    tags:
      Project: "{{ vpc_project }}"
      Owner: "{{ vpc_owner }}"
      Name: "{{ name_vpc }}"
  register: igw
  when: igw_verify.stdout == "0"

- set_fact:
    gateway_id: "{{ item.gateway_id }}"
    vpc_id: "{{ item.vpc_id }}"
    tag1: "{{ item.tags.Name }}"
    tag2: "{{ item.tags.Owner }}"
    tag3: "{{ item.tags.Project }}"    
  with_items: 
    -  "{{ igw }}"
  when: igw_verify.stdout == "0"

- name: shell module to insert in mysql db
  shell: |
         var1=$(date '+%s')
         echo "insert into vpc_igw ( name, vpc_id, gateway_id, tag1, tag2, tag3) values ( '{{ tag1 }}', '{{ vpc_id }}', '{{ gateway_id }}', '{{ tag1 }}','{{ tag2 }}', '{{ tag3 }}' )" > ./meta_$var1.sql
         mysql -u {{ dbuser }} -p{{ dbpass }} {{ database }} < meta_$var1.sql
  register: shell_insert_output
  when: igw_verify.stdout == "0"

- name: Include delete meta*sql task yaml
  include: sample.yaml

